package edu.upenn.cis350;

import java.io.File;
import java.io.FileOutputStream;
import java.util.List;
import java.util.Set;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;

import com.parse.FindCallback;
import com.parse.Parse;
import com.parse.ParseException;
import com.parse.ParseObject;
import com.parse.ParseQuery;

public class SyncActivity extends Activity {
	@Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.syncactivity);
        Parse.initialize(this,LoginHandler.link1 ,LoginHandler.link2);
        createList();
        createListActivity();
        
    }

	public void onBackButtonClick(View view) {
		Intent i = new Intent();
		setResult(RESULT_OK, i);
		finish();	
	}
	
	public void createList(){
    	
 	   System.out.println("Before getStudentForAct");
	     ParseQuery query1 = new ParseQuery("Student");
	        	query1.findInBackground(new FindCallback() {
			     public void done(List<ParseObject> queryList, ParseException e) {
			         if (e == null) {
			        	 try
			        	 {
			        	//test
			        	 System.out.println("Done No Error");
			        	 System.out.println("The size of querylsit is "+queryList.size());
			        	 Set<String> s = queryList.get(0).keySet();
			        	 String keys[]= new String[s.size()];
			        	 s.toArray(keys);
			        	 //File f = new File("Students.csv");
			        	 File f = new File("/mnt/sdcard/","Students.csv");
			        	 f.delete();
			        	/* int flag=0;
			        	 if(!f.exists())
			        	 {
			        		 f.createNewFile();
			        		 System.out.println("File Created");
			        		 flag=1;
			        	 }
			        	 else
			        	System.out.println("File Not Created");*/
			        	 //FileOutputStream fos = openFileOutput("Students.csv",MODE_WORLD_READABLE);
			        	 FileOutputStream fos = new FileOutputStream(f);
			        	 System.out.println(f.getAbsolutePath());
			        	 String name;
			        	 /*if(flag==1)
			        	 {*/
				        	for(int i=0;i<keys.length;i++)
				        	 {
				        		 System.out.println(keys[i]);
				        	   	 name=new String("\""+keys[i]+"\"");		        		 
						         fos.write(name.getBytes());
						         if(i!=keys.length-1)
						        		 fos.write(",".getBytes());			        	 
				        	 }
			        	
			        	   	 fos.write("\n".getBytes());
			        	   	 System.out.println("new line");
			        	 //}
			        	   	 
			        	 
			        	 
			        	 for(ParseObject student : queryList){
				     		//System.out.println("5"); 
			        		 String value;
			        		 for(int i=0;i<keys.length;i++)
				        	 {
			        			 System.out.println("for");
			        			 if(student.containsKey(keys[i]))			        			 
			        				{
			        				 value= new String("\""+student.get(keys[i]).toString()+"\"");
			        				}
			        			 else
			        			 {
			        				 value = new String("\""+ " "+ "\"");
			        				 System.out.println("false");
			        			 }
			        				 //fos.write(student.get(keys[i]).toString().getBytes());
			        				 fos.write(value.getBytes());	
			        			 if(i!=keys.length-1)
					        		 fos.write(",".getBytes());
				        	 }
			        		 fos.write("\n".getBytes()); 
			        				        		 
			        	 }
			        	 	fos.close();
			        	 	System.out.println("Complete");
			         }
			         catch(Exception ex)
		        	 {
		        		 System.out.println("Exception"+ex.toString());
		        		 ex.printStackTrace();
		        		 
		        	 }
			     
			     } else {
			             //objectRetrievalFailed();
			        	 System.out.println("Error");
			     }
			         
			     }
			     
			    
			 });
		
		  System.out.println("After getStudentForAct");
	
 	
 }
	
	public void createListActivity(){
    	
	 	   System.out.println("Before getStudentForAct");
		     ParseQuery query1 = new ParseQuery("Activity");
		        	query1.findInBackground(new FindCallback() {
				     public void done(List<ParseObject> queryList, ParseException e) {
				         if (e == null) {
				        	 try
				        	 {
				        	 System.out.println("Done No Error");
				        	 System.out.println("The size of querylsit is "+queryList.size());
				        	 Set<String> s = queryList.get(0).keySet();
				        	 String keys[]= new String[s.size()+2];
				        	 s.toArray(keys);
				        	 keys[s.size()]="ObjectId";
				        	 keys[s.size()+1]="UpdatedAt";
				        	 System.out.println("this worked");
				        	 //File f = new File("Students.csv");
				        	 File f = new File("/mnt/sdcard/","Activity.csv");
				        	 f.delete();
				        	/* int flag=0;
				        	 if(!f.exists())
				        	 {
				        		 f.createNewFile();
				        		 System.out.println("File Created");
				        		 flag=1;
				        	 }
				        	 else
				        	System.out.println("File Not Created");*/
				        	 //FileOutputStream fos = openFileOutput("Students.csv",MODE_WORLD_READABLE);
				        	 FileOutputStream fos = new FileOutputStream(f);
				        	 System.out.println(f.getAbsolutePath());
				        	 String name;
				        	 /*if(flag==1)
				        	 {*/
					        	for(int i=0;i<keys.length;i++)
					        	 {
					        		 System.out.println(keys[i]);
					        	   	 name=new String("\""+keys[i]+"\"");		        		 
							         fos.write(name.getBytes());
							         if(i!=keys.length-1)
							        		 fos.write(",".getBytes());			        	 
					        	 }
				        	
				        	   	 fos.write("\n".getBytes());
				        	   	 System.out.println("new line");
				        	 //}
				        	   	 
				        	 
				        	 
				        	 for(ParseObject activity : queryList){
					     		//System.out.println("5"); 
				        		 String value;
				        		 for(int i=0;i<keys.length-1;i++)
					        	 {
				        			 System.out.println("for");
				        			 if(activity.containsKey(keys[i]))			        			 
				        				{
				        				 value= new String("\""+activity.get(keys[i]).toString()+"\"");
				        				}
				        			 else
				        			 {
				        				 value = new String("\""+ " "+ "\"");
				        				 System.out.println("false");
				        			 }
				        				 //fos.write(student.get(keys[i]).toString().getBytes());
				        				 fos.write(value.getBytes());
						        		 fos.write(",".getBytes());
					        	 }
				        		 String temp =new String("\""+activity.getObjectId().toString()+"\"");
				        		 fos.write(temp.getBytes());
				        		 temp =new String("\""+activity.getUpdatedAt().toString()+"\"");
				        		 fos.write(temp.getBytes());
				        		 fos.write("\n".getBytes()); 
				        				        		 
				        	 }
				        	 	fos.close();
				        	 	System.out.println("Complete");
				         }
				         catch(Exception ex)
			        	 {
			        		 System.out.println("Exception"+ex.toString());
			        		 ex.printStackTrace();
			        		 
			        	 } 
				     
				     } else {
				             //objectRetrievalFailed();
				        	 System.out.println("Error");
				     }
				         
				     }
				     
				    
				 });
			
			  System.out.println("After getStudentForAct");
		
	 	
	 }
	
	
	

	
	
}
